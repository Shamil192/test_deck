{"ast":null,"code":"var _jsxFileName = \"/home/user/test_deck/test_deck/js/src/components/main/Main.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport AddCityModal from \"../modals/AddCityModal\";\nimport { deleteCity, fetchCurrentWeater, fetchWeek } from \"../../redux/actions/weatherAC\";\nimport WeekWeatherModal from \"../modals/WeekWeatherModal\";\nimport moment from \"moment\";\nimport \"moment/locale/ru\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Main() {\n  _s();\n\n  const citysArray = useSelector(state => state.citys);\n  const currentCityWeather = useSelector(state => state.currentWeather);\n  const [show, setShow] = useState(false);\n  const [time, setTime] = useState(0);\n  const dispatch = useDispatch();\n  moment.locale(\"ru\");\n  setTimeout(() => {\n    setTime(time + 1);\n  }, 300000);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      var _position$coords, _position$coords2;\n\n      let lat = position === null || position === void 0 ? void 0 : (_position$coords = position.coords) === null || _position$coords === void 0 ? void 0 : _position$coords.latitude;\n      let lon = position === null || position === void 0 ? void 0 : (_position$coords2 = position.coords) === null || _position$coords2 === void 0 ? void 0 : _position$coords2.longitude;\n      dispatch(fetchCurrentWeater(lat, lon));\n    });\n  }, [dispatch, time]);\n\n  const delCity = ind => {\n    dispatch(deleteCity(ind));\n  };\n\n  const showWeek = (lat, lon) => {\n    setShow(true);\n    dispatch(fetchWeek(lat, lon));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(WeekWeatherModal, {\n      show: show,\n      setShow: setShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddCityModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-5\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: \"\\u041C\\u043E\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\\u043F\\u043E\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: currentCityWeather === null || currentCityWeather === void 0 ? void 0 : currentCityWeather.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [currentCityWeather === null || currentCityWeather === void 0 ? void 0 : currentCityWeather.main.temp.toFixed(0), \"\\u2103\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\" \", \"\\u041E\\u0449\\u0443\\u0449\\u0430\\u0435\\u0442\\u0441\\u044F \\u043A\\u0430\\u043A \", currentCityWeather === null || currentCityWeather === void 0 ? void 0 : currentCityWeather.main.feels_like.toFixed(), \"\\u2103\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), \"\\u0412\\u043B\\u0430\\u0436\\u043D\\u043E\\u0441\\u0442\\u044C \", currentCityWeather === null || currentCityWeather === void 0 ? void 0 : currentCityWeather.main.humidity.toFixed(), \"%, \\u0434\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435\", \" \", currentCityWeather === null || currentCityWeather === void 0 ? void 0 : currentCityWeather.main.pressure.toFixed(), \"\\u043C\\u043C \\u0440\\u0442.\\u0441\\u0442\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"mb-2\",\n            variant: \"primary\",\n            onClick: () => showWeek(currentCityWeather.coord.lat, currentCityWeather.coord.lon),\n            children: \"\\u041F\\u043E\\u0434\\u0440\\u043E\\u0431\\u043D\\u0435\\u0435\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), citysArray.map((el, ind) => {\n        var _el$sys, _el$main, _el$main2, _el$main3, _el$main4, _el$sys2;\n\n        return /*#__PURE__*/_jsxDEV(Card, {\n          id: (_el$sys = el.sys) === null || _el$sys === void 0 ? void 0 : _el$sys.id,\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: el.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"\\u0422\\u0435\\u043C\\u043F\\u0435\\u0440\\u0430\\u0442\\u0443\\u0440\\u0430 \\u0432 \\u0433\\u043E\\u0440\\u043E\\u0434\\u0435 \", el.name, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [(_el$main = el.main) === null || _el$main === void 0 ? void 0 : _el$main.temp.toFixed(0), \"\\u2103\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\" \\u041E\\u0449\\u0443\\u0449\\u0430\\u0435\\u0442\\u0441\\u044F \\u043A\\u0430\\u043A \", (_el$main2 = el.main) === null || _el$main2 === void 0 ? void 0 : _el$main2.feels_like.toFixed(), \"\\u2103\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"\\u0412\\u043B\\u0430\\u0436\\u043D\\u043E\\u0441\\u0442\\u044C \", (_el$main3 = el.main) === null || _el$main3 === void 0 ? void 0 : _el$main3.humidity.toFixed(), \"%, \\u0434\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435\", \" \", (_el$main4 = el.main) === null || _el$main4 === void 0 ? void 0 : _el$main4.pressure.toFixed(), \"\\u043C\\u043C \\u0440\\u0442.\\u0441\\u0442\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"mx-1\",\n              variant: \"warning\",\n              onClick: () => showWeek(el.coord.lat, el.coord.lon),\n              children: \"\\u041F\\u043E\\u0434\\u0440\\u043E\\u0431\\u043D\\u0435\\u0435\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              id: (_el$sys2 = el.sys) === null || _el$sys2 === void 0 ? void 0 : _el$sys2.id,\n              onClick: () => delCity(ind),\n              children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Main, \"Cvj91mEC2ZoMzQYfua1TXgLYuHk=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/user/test_deck/test_deck/js/src/components/main/Main.jsx"],"names":["React","useEffect","useState","Card","Button","useSelector","useDispatch","AddCityModal","deleteCity","fetchCurrentWeater","fetchWeek","WeekWeatherModal","moment","Main","citysArray","state","citys","currentCityWeather","currentWeather","show","setShow","time","setTime","dispatch","locale","setTimeout","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lon","longitude","delCity","ind","showWeek","name","main","temp","toFixed","feels_like","humidity","pressure","coord","map","el","sys","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport AddCityModal from \"../modals/AddCityModal\";\nimport {\n  deleteCity,\n  fetchCurrentWeater,\n  fetchWeek,\n} from \"../../redux/actions/weatherAC\";\nimport WeekWeatherModal from \"../modals/WeekWeatherModal\";\nimport moment from \"moment\";\nimport \"moment/locale/ru\";\n\nfunction Main() {\n  const citysArray = useSelector((state) => state.citys);\n  const currentCityWeather = useSelector((state) => state.currentWeather);\n  const [show, setShow] = useState(false);\n  const [time, setTime] = useState(0);\n  const dispatch = useDispatch();\n  moment.locale(\"ru\");\n\n  setTimeout(() => {\n    setTime(time + 1);\n  }, 300000);\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      let lat = position?.coords?.latitude;\n      let lon = position?.coords?.longitude;\n      dispatch(fetchCurrentWeater(lat, lon));\n    });\n  }, [dispatch, time]);\n\n  const delCity = (ind) => {\n    dispatch(deleteCity(ind));\n  };\n\n  const showWeek = (lat, lon) => {\n    setShow(true);\n    dispatch(fetchWeek(lat, lon));\n  };\n\n  return (\n    <>\n      <WeekWeatherModal show={show} setShow={setShow} />\n      <AddCityModal />\n      <div className=\"container my-5\">\n        <Card>\n          <Card.Header>Мое местоположение</Card.Header>\n          <Card.Body>\n            <Card.Title>{currentCityWeather?.name}</Card.Title>\n            <h3>{currentCityWeather?.main.temp.toFixed(0)}℃</h3>\n            <h4>\n              {\" \"}\n              Ощущается как {currentCityWeather?.main.feels_like.toFixed()}℃\n            </h4>\n            Влажность {currentCityWeather?.main.humidity.toFixed()}%, давление{\" \"}\n            {currentCityWeather?.main.pressure.toFixed()}мм рт.ст\n          </Card.Body>\n          <div>\n            <Button\n              className=\"mb-2\"\n              variant=\"primary\"\n              onClick={() =>\n                showWeek(\n                  currentCityWeather.coord.lat,\n                  currentCityWeather.coord.lon\n                )\n              }\n            >\n              Подробнее\n            </Button>\n          </div>\n        </Card>\n        {citysArray.map((el, ind) => (\n          <Card id={el.sys?.id}>\n            <Card.Header>\n              <h2>{el.name}</h2>\n            </Card.Header>\n            <Card.Body>\n              <Card.Title>\n                <h3>Температура в городе {el.name}:</h3>\n                <h3>{el.main?.temp.toFixed(0)}℃</h3>\n              </Card.Title>\n              <Card.Text>\n                <h4> Ощущается как {el.main?.feels_like.toFixed()}℃</h4>\n              </Card.Text>\n              <Card.Text>\n                Влажность {el.main?.humidity.toFixed()}%, давление{\" \"}\n                {el.main?.pressure.toFixed()}мм рт.ст\n              </Card.Text>\n              <Button\n                className=\"mx-1\"\n                variant=\"warning\"\n                onClick={() => showWeek(el.coord.lat, el.coord.lon)}\n              >\n                Подробнее\n              </Button>\n              <Button\n                variant=\"danger\"\n                id={el.sys?.id}\n                onClick={() => delCity(ind)}\n              >\n                Удалить\n              </Button>\n            </Card.Body>\n          </Card>\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}